{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "redisDeploySwitch": {
            "defaultValue": "false",
            "metadata": {
                "description": "Switch to deploy a redis cache or not. Note that certain versions of Wordpress (e.g., 3.1) don't work well with Redis, so use this only for known well-working Wordpress versions (e.g., 3.4)."
            },
            "allowedValues": [ 
                "true", 
                "false" 
            ],
            "type": "string"
        },
        "httpsTermination": {
            "allowedValues": [
                "VMSS",
                "AppGw",
                "None"
            ],
            "defaultValue": "VMSS",
            "metadata": {
                "description": "Indicates where https termination occurs. 'VMSS' is for https termination at the VMSS instance VMs (using nginx https proxy). 'AppGw' is for https termination with an Azure Application Gateway. When selecting this, you need to specify all appGw* parameters. 'None' is for testing only with no https. 'None' may not be used with a separately configured https termination layer. If you want to use the 'None' option with your separately configured https termination layer, you'll need to update your Wordpress config.php manually for $cfg->wwwroot and $cfg->sslproxy."
            },
            "type": "string"
        },
        "loadBalancerSku": {
            "defaultValue": "Basic",
            "allowedValues": [
                "Basic",
                "Standard"
            ],
            "metadata": {
                "description": "Loadbalancer SKU"
            },
            "type": "string"
        },
        "wordpressVersion": {
            "allowedValues": [
                "5.7"
            ],
            "defaultValue": "5.7",
            "metadata": {
                "description": "The Wordpress version you want to install."
            },
            "type": "string"
        },
        "sshPublicKey": {
            "metadata": {
                "description": "ssh public key"
            },
            "type": "string"
        },
        "webServerType": {
            "defaultValue": "nginx",
            "allowedValues": [
                "apache",
                "nginx"
            ],
            "metadata": {
                "description": "Web server type"
            },
            "type": "string"
        },
        "autoscaleVmSku": {	
            "defaultValue": "Standard_DS2_v2",	
            "metadata": {	
                "description": "VM size for autoscaled web VMs"	
            },	
            "type": "string"	
        },	
        "autoscaleVmCountMax": {	
            "defaultValue": "10",	
            "metadata": {	
                "description": "Maximum number of autoscaled web VMs"	
            },	
            "type": "string"	
        },
        "phpVersion": {
            "allowedValues": [
                "7.2",
                "7.3",
                "7.4"
            ],
            "defaultValue": "7.4",
            "metadata": {
                "description": "php version"
            },
            "type": "string"
        },
        "dbServerType": {
            "defaultValue": "mysql",
            "allowedValues": [
                "maria",
                "mysql"
            ],
            "metadata": {
                "description": "Database type"
            },
            "type": "string"
        },
        "wordpressDbName": {
            "defaultValue": "wordpress",
            "metadata": {
                "description": "Wordpress Database name"
            },
            "type": "string"
        },
        "wordpressDbUser": {
            "defaultValue": "wordpress",
            "metadata": {
                "description": "Wordpress Database username. This user is different from Database admin user."
            },
            "type": "string"
        },
        "mysqlMariaVcores": {
            "allowedValues": [
                "1",
                "2",
                "4",
                "8",
                "16",
                "32"
            ],
            "defaultValue": "2",
            "metadata": {
                "description": "MySql/Maria vCores. For Basic tier, only 1 & 2 are allowed. For GeneralPurpose tier, 2, 4, 8, 16, 32 are allowed. For MemoryOptimized, 2, 4, 8, 16 are allowed."
            },
            "type": "string"
        },
        "mysqlMariaStgSizeGB": {
            "defaultValue": "125",
            "metadata": {
                "description": "MySql/Maria storage size in GB. Minimum 5GB, increase by 1GB, up to 1TB (1024 GB)"
            },
            "type": "string"
        },
        "mysqlMariaSkuTier": {
            "allowedValues": [
                "Basic",
                "GeneralPurpose",
                "MemoryOptimized"
            ],
            "defaultValue": "GeneralPurpose",
            "metadata": {
                "description": "MySql/Maria sku tier"
            },
            "type": "string"
        },
        "mysqlMariaSkuHwFamily": {
            "allowedValues": [
                "Gen4",
                "Gen5"
            ],
            "defaultValue": "Gen5",
            "metadata": {
                "description": "MySql/Maria sku hardware family. Central US is Gen4 only, so make sure to change this parameter to Gen4 if your deployment is on Central US."
            },
            "type": "string"
        },
        "mysqlVersion": {
            "allowedValues": [
                "5.0",
                "5.6",
                "5.7"
            ],
            "defaultValue": "5.0",
            "metadata": {
                "description": "Mysql version"
            },
            "type": "string"
        },
        "fileServerDiskSize": {
            "defaultValue": "100",
            "metadata": {
                "description": "Size per disk for gluster nodes or nfs server"
            },
            "type": "string"
        },
        "vNetAddressSpace": {
            "defaultValue": "172.31.0.0",
            "metadata": {
                "description": "Address range for the Wordpress virtual network and various subnets - presumed /16 for a newly created vnet in case customVnetId is blank. Further subneting (a number of */24 subnets starting from the xxx.yyy.zzz.0/24 will be created on a newly created vnet or your BYO-vnet (specified in customVnetId parameter)."
            },
            "type": "string"
        },
        "ubuntuVersion": {
            "type": "string",
            "allowedValues": [
                "18.04-LTS"
            ],
            "defaultValue": "18.04-LTS"
        }
    },
    "variables": {
        "_artifactsLocation": "https://raw.githubusercontent.com/arijitmicrosoft/LAMP/master/",
        "_artifactsLocationSasToken": "",
        "documentationLine1": "'eastus2euap' is an Azure internal test region. It has limited support for many features such as: 'FileStorage' storageAccount kind etc.",
        "documentationLine2": "If resource group location is 'eastus2euap' then use a prod region for deployment.",
        "rgLocation": "[toLower(resourceGroup().location)]",
        "location": "[if(equals(variables('rgLocation'), 'eastus2euap'), 'southeastasia', variables('rgLocation'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "name": "mainTemplate",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "_artifactsLocation":           { "value": "[variables('_artifactsLocation')]" },
                    "_artifactsLocationSasToken":   { "value": "[variables('_artifactsLocationSasToken')]" },
                    "redisDeploySwitch":            { "value": "[bool(parameters('redisDeploySwitch'))]" },
                    "httpsTermination":             { "value": "[parameters('httpsTermination')]"},
                    "loadBalancerSku":              { "value": "[parameters('loadBalancerSku')]"},
                    "siteURL":                      { "value": ""},
                    "wordpressVersion":             { "value": "[parameters('wordpressVersion')]"},
                    "sshPublicKey":                 { "value": "[parameters('sshPublicKey')]" },
                    "controllerVmSku":              { "value": "Standard_DS1_v2"},
                    "webServerType":                { "value": "[parameters('webServerType')]"},
                    "autoscaleVmSku":               { "value": "[parameters('autoscaleVmSku')]" },
                    "autoscaleVmCountMax":          { "value": "[int(parameters('autoscaleVmCountMax'))]" },
                    "phpVersion":                   { "value": "[parameters('phpVersion')]" },
                    "dbServerType":                 { "value": "[parameters('dbServerType')]" },
                    "dbLogin":                      { "value": "dbadmin" },
                    "wordpressDbName":              { "value": "[parameters('wordpressDbName')]" },
                    "wordpressDbUser":              { "value": "[parameters('wordpressDbUser')]" },
                    "mysqlMariaVcores":             { "value": "[int(parameters('mysqlMariaVcores'))]" },
                    "mysqlMariaStgSizeGB":          { "value": "[int(parameters('mysqlMariaStgSizeGB'))]" },
                    "mysqlMariaSkuTier":            { "value": "[parameters('mysqlMariaSkuTier')]" },
                    "mysqlMariaSkuHwFamily":        { "value": "[parameters('mysqlMariaSkuHwFamily')]" },
                    "mysqlVersion":                 { "value": "[parameters('mysqlVersion')]" },
                    "postgresVersion":              { "value": "9.6" },
                    "fileServerType":               { "value": "azurefiles" },
                    "storageAccountType":           { "value": "Premium_LRS" },
                    "fileServerDiskSize":           { "value": "[int(parameters('fileServerDiskSize'))]" },
                    "vNetAddressSpace":             { "value": "[parameters('vNetAddressSpace')]"},
                    "ubuntuVersion":                { "value": "[parameters('ubuntuVersion')]"},
                    "location":                     { "value": "[variables('location')]" },
                    "isMigration":                  { "value": true }
                },
                "templateLink": {
                    "uri": "[concat(variables('_artifactsLocation'), 'azuredeploy.json', variables('_artifactsLocationSasToken'))]"
                }
            }
        }
    ],
    "outputs": {
        "mainTemplateOutputs": {
            "type": "object",
            "value": "[reference('mainTemplate').outputs]"
        }
    }
}